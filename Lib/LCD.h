/*!
*	\defgroup LCD 	LCD
*	\ingroup LCD
* @{
*/

/*!
*	\file LCD
*	\brief 	Библиотека для работы c LCD 
*/


#ifndef LCD_H_
#define LCD_H_

#include <stdint.h>

/*!
* \brief Функция инициализации LCD
*
* Функция инициализирует LCD с 4 битной шиной данных, в режиме отображения 2 строк.
* \ingroup LCD
*/
void LCD_Init(void);


/*!
* \brief Функция вывода одного символа на экран
*
* Вывод символа осуществляется с заранее установленной позиции курсора.
* \param[in] data Однобайтовая переменная типа char содержащая символ который необходимо отобразить на LCD
* \ingroup LCD
*/
void LCD_WriteChar(char data);



/*!
* \brief Функция вывода строки на LCD
*
* Функция осуществляет вывод строки на LCD, длина сроки ограничена 16 символами. Вывод символов осуществляется с заранее установленной позиции курсора.
* \param[in] data Массив символов для отображения на LCD
* \ingroup LCD
*/
void LCD_WriteString(char *data);


/*!
* \brief Функция вывода целочисленного числа на экран
*
*  Вывод целочисленного числа осуществляется с заранее установленной позиции курсора.
* \param[in] data Целочисленного переменная для отображения на LCD
* \ingroup LCD
*/
void LCD_WriteInt(int data);


/*!
* \brief Функция очистки экрана
*
*  Функция очищает экран и устанавливает курсор в нулевую позицию.
* \ingroup LCD
*/
void LCD_Clear(void);


/*!
* \brief Функция установки курсора
*
* Функция осуществляет установку курсора по заданными координатам.
* \param[in] row Номер строки в которую необходимо установить курсор. Нумерация строк начинается с 0.
* \param[in] column Номер столбца в который необходимо установить курсор. Нумерация столбцов начинается с 0.
* \ingroup LCD
*/
void LCD_SetCursor(uint8_t row, uint8_t column);

#endif /* LCD_H_ */
/*! @} */